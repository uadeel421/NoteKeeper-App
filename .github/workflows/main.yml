on:
  push:
    branches:
      - main
      
  pull_request:
    branches: [ main ]
  workflow_dispatch:  
  
jobs:
  ci:
    name: Linting and Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, notes-service, frontend, user-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      working-directory: ${{ matrix.service }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8 pytest-cov autopep8  # Install autopep8

    - name: Auto format with autopep8
      working-directory: ${{ matrix.service }}
      run: |
        autopep8 --in-place --aggressive --aggressive .  # Auto format your code

    - name: Run flake8 (basic lint)
      working-directory: ${{ matrix.service }}
      run: |
        flake8 .

    - name: Run tests with coverage
      working-directory: ${{ matrix.service }}
      run: |
        export PYTHONPATH=.
        pytest --cov=. --cov-report=xml || exit 1

    - name: Upload coverage
      uses: codecov/codecov-action@v3

  cd:
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, notes-service, frontend, user-service]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version info
        id: version
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and Push
        working-directory: ${{ matrix.service }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag uadeel421/pythonapplication${{ matrix.service }}:latest \
            --tag uadeel421/pythonapplication${{ matrix.service }}:${{ env.SHA }} \
            --tag uadeel421/pythonapplication${{ matrix.service }}:${{ env.DATE }} \
            --push .
